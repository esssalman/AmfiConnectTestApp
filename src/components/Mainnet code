import { createPortal } from "react-dom";
import { ethers } from "ethers";

export const TransactionModal = ({ address, currAmount, selectedCurrency }) => {

    const getLiveRates = async (currency) => {
        try {
            const response = await fetch(`http://127.0.0.1:8000/crypto-price/${currency}`);
            const data = await response.json();
            console.log('Fetched live price for:', currency);
            console.log(data.data[currency].quote.USD.price);
            return data.data[currency].quote.USD.price; // Extract price from the response
        } catch (error) {
            console.error("Error fetching rates:", error);
            return null;
        }
    };

    const sendTransaction = async (event) => {
        event.preventDefault(); // Prevent form submission behavior

        if (!address) {
            alert("Please connect your wallet first.");
            return;
        }

        try {
            // Get the user's Ethereum provider (e.g., MetaMask)
            const { ethereum } = window;
            if (!ethereum) {
                alert("MetaMask is required to make transactions.");
                return;
            }

            // Request access to the user's accounts
            await ethereum.request({ method: 'eth_requestAccounts' });

            // Set up provider and signer for transactions
            let provider = new ethers.providers.Web3Provider(ethereum);
            const signer = provider.getSigner();

            // Handle network switching based on selected currency
            if (selectedCurrency === "BNB") {
                // Switch to Binance Smart Chain
                await ethereum.request({
                    method: 'wallet_switchEthereumChain',
                    params: [{ chainId: '0x38' }], // Chain ID for BSC mainnet
                });
            } else if (selectedCurrency === "ETH") {
                // Switch to Ethereum Mainnet
                await ethereum.request({
                    method: 'wallet_switchEthereumChain',
                    params: [{ chainId: '0x1' }], // Chain ID for Ethereum mainnet
                });
            }

            // Send the transaction
            const tx = await signer.sendTransaction({
                to: "0x72BAadd079b1604ff7932F6F77c230b54C4C6D5a", // Replace with actual recipient address
                value: ethers.utils.parseEther(currAmount.toString()), // Convert amount to ETH/BNB format
            });

            console.log("Transaction Hash:", tx.hash);
            alert(`Transaction successful! Hash: ${tx.hash}`);
        } catch (error) {
            console.error("Transaction error:", error);
            alert("Transaction failed. Please check the console for details.");
        }
    };

    return createPortal(
        <div className="modal fade" id="seedRoundModal" tabIndex="-1" aria-labelledby="seedRoundModalLabel" aria-hidden="true">
            <div className="modal-dialog modal-lg">
                <div className="modal-content">
                    <div className="modal-body">
                        <form>
                            <p>
                                Thank you for your interest in AMFI Project! Please fill out the form below to apply for our seed round whitelist. By participating in seed round, you are expressing your intent to purchase AMFI token at an early stage, subject to approval.
                            </p>
                            <div className="form-group">
                                <label>Name: </label>
                                <input className="form-control" name="name" placeholder="Enter your name" required />
                            </div>
                            <div className="form-group">
                                <label>Email: </label>
                                <input className="form-control" name="email" placeholder="info@amfi.com" required />
                            </div>
                            <div className="form-group">
                                <label>Are you an accredited investor? </label>
                                <select className="form-control" name="question" id="question" required>
                                    <option value="yes">Yes</option>
                                    <option value="no">No</option>
                                </select>
                            </div>
                            <div className="form-check">
                                <input className="form-check-input" type="checkbox" value="" id="term&cond" />
                                <label className="form-check-label" htmlFor="term&cond">
                                    Do you agree that token purchase in the seed round will be claimed after presale ends?
                                </label>
                            </div>
                            <br />
                            {address && (
                                <div>
                                    <p>Wallet Address: {address}</p>
                                    <p>Amount: {currAmount} {selectedCurrency}</p>
                                    <button className="btn btn-primary" onClick={sendTransaction}>Submit & Pay</button>
                                </div>
                            )}
                        </form>
                    </div>
                </div>
            </div>
        </div>, document.body
    );
};
